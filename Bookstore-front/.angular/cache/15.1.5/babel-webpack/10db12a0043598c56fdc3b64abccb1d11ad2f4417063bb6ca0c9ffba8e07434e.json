{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/books';\n  }\n  getBook(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  createBook(book) {\n    return this.http.post(this.baseUrl, book);\n  }\n  updateBook(id, value) {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n  deleteBook(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`, {\n      responseType: 'text'\n    });\n  }\n  getBooksList() {\n    console.log(this.baseUrl);\n    return this.http.get(this.baseUrl);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,YAAO,GAAG,6BAA6B;EAGP;EAEjCC,OAAO,CAACC,EAAU;IACvB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACC,OAAO,IAAIF,EAAE,EAAE,CAAC;EACrD;EAEAG,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,IAAI,CAACH,OAAO,EAAEE,IAAI,CAAC;EACjD;EAEAE,UAAU,CAACN,EAAU,EAAEO,KAAU;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACN,OAAO,IAAIF,EAAE,EAAE,EAAEO,KAAK,CAAC;EAC5D;EAEAE,UAAU,CAACT,EAAU;IACnB,OAAO,IAAI,CAACF,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIF,EAAE,EAAE,EAAE;MAAEW,YAAY,EAAE;IAAM,CAAE,CAAC;EAC5E;EAEAC,YAAY;IACVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,OAAO,CAAC;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAC5C;;AAzBWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["BookService","constructor","http","getBook","id","get","baseUrl","createBook","book","post","updateBook","value","put","deleteBook","delete","responseType","getBooksList","console","log","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects_2023\\javaee-getting-started\\bookstore-front\\src\\app\\services\\bookservices.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from './book';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  private baseUrl = 'http://localhost:8080/books';\n  books!: Book[];\n\n  constructor(private http: HttpClient) { }\n\n  public getBook(id: number): Observable<Book> {\n    return this.http.get<Book>(`${this.baseUrl}/${id}`);\n  }\n\n  createBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.baseUrl, book);\n  }\n\n  updateBook(id: number, value: any): Observable<Book> {\n    return this.http.put<Book>(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteBook(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getBooksList(): Observable<Book[]> {\n    console.log(this.baseUrl);\n    return this.http.get<Book[]>(this.baseUrl);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}