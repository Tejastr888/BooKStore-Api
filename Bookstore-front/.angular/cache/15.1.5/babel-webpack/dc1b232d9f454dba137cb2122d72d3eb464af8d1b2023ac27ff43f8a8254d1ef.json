{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/books';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getBooks() {\n    return this.http.get(this.baseUrl);\n  }\n  createBook(book) {\n    return this.http.post(this.baseUrl, book, this.httpOptions);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAMtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALhB,YAAO,GAAG,6BAA6B;IAC/C,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIC,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAEuC;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAC5C;EACAC,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACH,OAAO,EAAEE,IAAI,EAAE,IAAI,CAACE,WAAW,CAAC;EACnE;;AAbWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["BookService","constructor","http","headers","HttpHeaders","getBooks","get","baseUrl","createBook","book","post","httpOptions","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects_2023\\javaee-getting-started\\bookstore-front\\src\\app\\services\\bookservices.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from './book';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  private baseUrl = 'http://localhost:8080/books';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getBooks(): Observable<Book[]> {\n    return this.http.get<Book[]>(this.baseUrl);\n  }\n  createBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.baseUrl, book, this.httpOptions);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}