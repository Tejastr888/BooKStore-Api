{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/post';\n  }\n  getBooks() {\n    return this.http.get(this.baseUrl);\n  }\n  createBook(book) {\n    console.log(\"create\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const post = this.http.post(this.baseUrl, book, httpOptions);\n    console.log(\"created\");\n    return post;\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,YAAO,GAAG,4BAA4B;EAGN;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAC5C;EACAC,UAAU,CAACC,IAAU;IACnBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IACD,MAAMa,IAAI,GAAE,IAAI,CAACV,IAAI,CAACU,IAAI,CAAO,IAAI,CAACP,OAAO,EAAEE,IAAI,EAAEG,WAAW,CAAC;IACjEF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,OAAOG,IAAI;EACb;;AAjBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["HttpHeaders","BookService","constructor","http","getBooks","get","baseUrl","createBook","book","console","log","httpOptions","headers","post","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects_2023\\javaee-getting-started\\bookstore-front\\src\\app\\services\\bookservices.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from './book';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  private baseUrl = 'http://localhost:8080/post';\n \n\n  constructor(private http: HttpClient) { }\n\n  getBooks(): Observable<Book[]> {\n    return this.http.get<Book[]>(this.baseUrl);\n  }\n  createBook(book: Book): Observable<Book> {\n    console.log(\"create\");\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    const post= this.http.post<Book>(this.baseUrl, book, httpOptions);\n    console.log(\"created\");\n    return post;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}