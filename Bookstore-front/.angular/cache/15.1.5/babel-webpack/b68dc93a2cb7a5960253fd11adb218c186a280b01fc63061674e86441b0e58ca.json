{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/books';\n  }\n  // public getBook(id: number): Observable<Book> {\n  //   return this.http.get<Book>(`${this.baseUrl}/${id}`);\n  // }\n  // createBook(book: Book): Observable<Book> {\n  //   return this.http.post<Book>(this.baseUrl, book);\n  // }\n  // updateBook(id: number, value: any): Observable<Book> {\n  //   return this.http.put<Book>(`${this.baseUrl}/${id}`, value);\n  // }\n  // deleteBook(id: number): Observable<any> {\n  //   return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  // }\n  getBooksList() {\n    console.log(this.baseUrl);\n    return this.http.get(this.baseUrl);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,YAAO,GAAG,6BAA6B;EAGP;EAExC;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEOC,YAAY;IACjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,IAAI,CAACD,OAAO,CAAC;EAC5C;;AAzBWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFV;AAAM","names":["BookService","constructor","http","getBooksList","console","log","baseUrl","get","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects_2023\\javaee-getting-started\\bookstore-front\\src\\app\\services\\bookservices.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from './book';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  private baseUrl = 'http://localhost:8080/books';\n  \n\n  constructor(private http: HttpClient) { }\n\n  // public getBook(id: number): Observable<Book> {\n  //   return this.http.get<Book>(`${this.baseUrl}/${id}`);\n  // }\n\n  // createBook(book: Book): Observable<Book> {\n  //   return this.http.post<Book>(this.baseUrl, book);\n  // }\n\n  // updateBook(id: number, value: any): Observable<Book> {\n  //   return this.http.put<Book>(`${this.baseUrl}/${id}`, value);\n  // }\n\n  // deleteBook(id: number): Observable<any> {\n  //   return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  // }\n\n  public getBooksList(): Observable<Book[]> {\n    console.log(this.baseUrl);\n    return this.http.get<Book[]>(this.baseUrl);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}